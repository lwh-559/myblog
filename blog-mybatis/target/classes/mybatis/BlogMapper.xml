<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hua.mapper.BlogMapper">

    <!--新增一个博客-->
    <insert id="addBlog" parameterType="Blog">
        insert into myblog.t_blog (id,title, content, first_picture, flag,views, comment_count,
                                   appreciation, share_statement, commentabled, published,
                                   recommend, create_time, update_time, type_id, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{commentCount},#{appreciation},
                #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
                #{updateTime},#{typeId},#{userId},#{description});
    </insert>
    <!--删除一个博客-->
    <delete id="delBlogById" parameterType="Long">
        delete from myblog.t_blog where id=#{id}
    </delete>
    <!--修改一个博客-->
    <update id="updateBlog" parameterType="Blog">
        update myblog.t_blog
        set title = #{title}, content = #{content}, flag = #{flag},
            first_picture = #{firstPicture} , description = #{description},
            appreciation = #{appreciation},commentabled = #{commentabled},
            published = #{published},recommend = #{recommend},
            share_statement = #{shareStatement},type_id = #{typeId},
            update_time = #{updateTime} where id = #{id};
    </update>

    <resultMap id="blog" type="Blog">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>

        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="published" column="published"/>
        <result property="recommend" column="recommend"/>
        <result property="shareStatement" column="share_statement"/>

        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
        <result property="description" column="description"/>

        <association property="type" column="{id=type_id}" javaType="Type" select="getType"/>
        <association property="user" column="{id=user_id}" javaType="User" select="getUser"/>
    </resultMap>

    <select id="getType" resultType="Type">
        select * from myblog.t_type where id = #{id}
    </select>
    <select id="getUser" resultType="User">
        select nickname,email,avatar from myblog.t_user where id = #{id}
    </select>

    <!--根据id查询博客-->
    <select id="getBlogById" resultMap="blog">
        select * from myblog.t_blog where id=#{id}
    </select>

    <!--查询所有博客-->
    <select id="getAllBlog" resultMap="blog">
        select * from myblog.t_blog
    </select>
    <!--获取推荐的博客-->
    <select id="getAllRecommendBlog" resultMap="blog">
        select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4;
    </select>
    <!--根据分类ID查询博客-->
    <select id="getBlogsByTypeId" resultMap="blog">
        select * from myblog.t_blog where type_id=#{typeId};
    </select>

    <resultMap id="blogQuery" type="BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="typeId" column="type_id"/>
        <association property="type" javaType="Type">
            <id property="id" column="tid"/>
            <result property="name" column="tname"/>
        </association>
    </resultMap>

    <!--查询所有显示博客-->
    <select id="getAllBlogQuery" resultMap="blogQuery">
        select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id tid,t.name tname
        from myblog.t_blog b left join myblog.t_type t
        on b.type_id = t.id
        order by b.update_time desc
    </select>

    <!--搜索，模糊查询-->
    <select id="getBlogQueryByTitleOrTypeId" resultMap="blogQuery">
        select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id tid,t.name tname
        from myblog.t_blog b,myblog.t_type t
        <where>
            b.type_id=t.id
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="title != null">
                and b.title like CONCAT('%',#{title},'%')
            </if>
        </where>
    </select>

    <!--用户搜索-->
    <select id="searchBlog" resultMap="blog">
        select * from myblog.t_blog
        where (title like CONCAT('%',#{query},'%') or content like  CONCAT('%',#{query},'%'))
        order by update_time desc
    </select>

    <!--查询出文章评论数量并更新-->
    <update id="getCommentCountById" parameterType="Blog">
        update myblog.t_blog b set b.comment_count = (
            select count(*) from myblog.t_comment c where c.blog_id = #{id} and b.id = #{id}
        ) WHERE b.id = #{id}
    </update>

    <!--文章访问自增-->
    <update id="updateViews" parameterType="Blog">
        update myblog.t_blog b set b.views = b.views+1 where b.id = #{id}
    </update>

    <!--统计博客信息-->
    <select id="getBlogTotal" resultType="Integer">
        select count(*) from myblog.t_blog
    </select>
    <select id="getBlogViewTotal" resultType="Integer">
        select sum(views) from myblog.t_blog
    </select>
    <select id="getBlogCommentTotal" resultType="Integer">
        select count(*) from myblog.t_comment
    </select>
    <select id="getBlogMessageTotal" resultType="Integer">
        select count(*) from myblog.t_message
    </select>
</mapper>